version: "3.9"

services:
  # ===== PROD =====
  api:
    profiles: ["prod"]
    build:
      context: ../..
      dockerfile: apps/api/Dockerfile
      target: runner
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGO_URI: mongodb://mongo:27017/app
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-uploads}
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - redis
      - minio
    restart: unless-stopped

#  web:
#    profiles: ["prod"]
#    build:
#      context: ../..
#      dockerfile: apps/web/Dockerfile
#      target: runner
#    environment:
#      NODE_ENV: production
#      PORT: 3000
#      NEXT_PUBLIC_API_URL: http://api:4000
#    ports:
#      - "3000:3000"
#    depends_on:
#      - api
#    restart: unless-stopped

  # ===== DEV =====
  api-dev:
    profiles: ["dev"]
    build:
      context: ../..
      dockerfile: apps/api/Dockerfile
      target: dev
    working_dir: /app
    command: sh -c "npm ci && npm run start:dev"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGO_URI: mongodb://mongo:27017/app
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-uploads}
      CHOKIDAR_USEPOLLING: "1"
    volumes:
      - ../../apps/api:/app
      - api-node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - redis
      - minio

#  web-dev:
#    profiles: ["dev"]
#    build:
#      context: ../..
#      dockerfile: apps/web/Dockerfile
#      target: dev
#    working_dir: /app
#    command: sh -c "npm ci && npm run dev"
#    environment:
#      NODE_ENV: development
#      PORT: 3000
#      NEXT_PUBLIC_API_URL: http://api-dev:4000
#      WATCHPACK_POLLING: "1"
#    volumes:
#      - ../../apps/web:/app
#      - web-node_modules:/app/node_modules
#    ports:
#      - "3000:3000"
#    depends_on:
#      - api-dev

  # ===== WSPÓLNE USŁUGI =====
  mongo:
    image: mongo:7
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # MinIO Console
    restart: unless-stopped

volumes:
  mongo-data:
  minio-data:
  api-node_modules:
  web-node_modules:
